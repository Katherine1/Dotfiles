return {
    "folke/snacks.nvim",
    dependencies = { 'nvim-tree/nvim-web-devicons' },
    priority = 1000,
    lazy = false,
    opts = {
        bigfile = { enabled = true },
        dashboard = { enabled = true },
        indent = { enabled = true },
        input = {enabled = true },
        lazygit = { enabled = true },
        notifier = { enabled = true },
        picker = { enabled = true },
        quickfile = { enabled = true },
        scroll = { enabled = true },
        statuscolumn = { enabled = true },
        words = { enabled = true },
    },
    keys = {
        { "<leader>,", function() require('snacks').picker.buffers() end, mode='n', desc = "Buffers" },
        { "<leader>/", function() require('snacks').picker.grep() end, mode='n', desc = "Grep" },
        { "<leader>:", function() require('snacks').picker.command_history() end, mode='n', desc = "Command History" },
        { "<leader><space>", function() require('snacks').picker.files() end, mode='n', desc = "Find Files" },
        { "<leader>vf", function() require('snacks').picker.explorer() end, mode='n', desc = "View Files" },
        -- find
        { "<leader>fb", function() require('snacks').picker.buffers() end, mode='n', desc = "Buffers" },
        { "<leader>fc", function() require('snacks').picker.files({ cwd = vim.fn.stdpath("config") }) end, mode='n', desc = "Find Config File" },
        { "<leader>ff", function() require('snacks').picker.files() end, mode='n', desc = "Find Files" },
        { "<leader>fg", function() require('snacks').picker.git_files() end, mode='n', desc = "Find Git Files" },
        { "<leader>fr", function() require('snacks').picker.recent() end, mode='n', desc = "Recent" },
        -- git
        { "<leader>gc", function() require('snacks').picker.git_log() end, mode='n', desc = "Git Commit Log" },
        { "<leader>gs", function() require('snacks').picker.git_status() end, mode='n', desc = "Git Status" },
        { "<leader>gb", function() require('snacks').git.blame_line() end, mode='n', desc = "Git Blame line" },
        { "<leader>gg", function() require('snacks').lazygit() end, mode='n', desc = "Lazygit" },
        -- Grep
        { "<leader>sb", function() require('snacks').picker.lines() end, mode='n', desc = "Buffer Lines" },
        { "<leader>sB", function() require('snacks').picker.grep_buffers() end, mode='n', desc = "Grep Open Buffers" },
        { "<leader>sg", function() require('snacks').picker.grep() end, mode='n', desc = "Grep" },
        { "<leader>sw", function() require('snacks').picker.grep_word() end, mode={"n", "x"}, desc = "Visual selection or word"},
        -- search
        { '<leader>s"', function() require('snacks').picker.registers() end, mode='n', desc = "Registers" },
        { "<leader>sa", function() require('snacks').picker.autocmds() end, mode='n', desc = "Autocmds" },
        { "<leader>sc", function() require('snacks').picker.command_history() end, mode='n', desc = "Command History" },
        { "<leader>sC", function() require('snacks').picker.commands() end, mode='n', desc = "Commands" },
        { "<leader>sd", function() require('snacks').picker.diagnostics() end, mode='n', desc = "Diagnostics" },
        { "<leader>sh", function() require('snacks').picker.help() end, mode='n', desc = "Help Pages" },
        { "<leader>sH", function() require('snacks').picker.highlights() end, mode='n', desc = "Highlights" },
        { "<leader>sj", function() require('snacks').picker.jumps() end, mode='n', desc = "Jumps" },
        { "<leader>sk", function() require('snacks').picker.keymaps() end, mode='n', desc = "Keymaps" },
        { "<leader>sl", function() require('snacks').picker.loclist() end, mode='n', desc = "Location List" },
        { "<leader>sM", function() require('snacks').picker.man() end, mode='n', desc = "Man Pages" },
        { "<leader>sm", function() require('snacks').picker.marks() end, mode='n', desc = "Marks" },
        { "<leader>sR", function() require('snacks').picker.resume() end, mode='n', desc = "Resume" },
        { "<leader>sq", function() require('snacks').picker.qflist() end, mode='n', desc = "Quickfix List" },
        { "<leader>uC", function() require('snacks').picker.colorschemes() end, mode='n', desc = "Colorschemes" },
        { "<leader>qp", function() require('snacks').picker.projects() end, mode='n', desc = "Projects" },
        -- LSP
        { "gd", function() require('snacks').picker.lsp_definitions() end, mode='n', desc = "Goto Definition" },
        { "grr", function() require('snacks').picker.lsp_references() end, nowait = true, mode='n', desc = "References" },
        { "gri", function() require('snacks').picker.lsp_implementations() end, mode='n', desc = "Goto Implementation" },
        { "gy", function() require('snacks').picker.lsp_type_definitions() end, mode='n', desc = "Goto T[y]pe Definition" },
        { "g0", function() require('snacks').picker.lsp_symbols() end, mode='n', desc = "LSP Symbols" },
    },
}
